API

Instalar o driver do mongo

Fazer o Model apenas com as props

Usando os repositories

Data \ Repositories

A interface é um contrato que pode ser usada por outras classes depois

Ela vai LIMITAR o tipo de acesso que pode ser feito aos dados,
pois as classes terão que implementar ela

Data \ Configurations

As configurations precisam ter uma intreface tbm

Coloco no startup.cs as configs do mongodb em configure services

Coloco as configs do mongo no appsettings


--> alguns dos meus dados podem ser gerados pelo sistema
então pode ser bom usar as DTOs / InputModel, que são objetos
baseados no model, que só tem as props para uma operação 
específica

-> preciso lidar com o input model
i.e., criar um model a partir dele


Pra arrumar o problema de CORS, eu adicionei o codigo abaixo no Startup.cs
-> o link ali deve ser a mesma rota que o meu frontend tiver,
no caso o Vue pega aquela porta
---------------------------------------------------------------
services.AddCors(o => o.AddPolicy("CorsPolicy", builder => {
                builder
                .AllowAnyMethod()
                .AllowAnyHeader()
                .AllowCredentials()
                .WithOrigins("http://localhost:8080");
            }));

app.UseCors("CorsPolicy");
----------------------------------------------------------------

Fullstack app com VUE e .NET

Instalat o vue CLI

vue --v

vue create clientes_app // não pode usar maiúscula

instalação no default


O vue funciona por componentes também.
Mas a etsrutura padrão dele parece um HTML, e não um JS retornando HTML
E aí dentro de uma tag eu uso o JS

Pra lidar com os dados na tabela eu uso o v-for
Pra chamar da APi, eu uso o axios

Dentro do export do meu componente vai ficar:
- nome
- props
- data -> dados q serão usados no template
- methods -> ações JS do meu componente, incluindo a chamada do axios
- created -> aqui eu uso os meus métodos, pois serão chamados na criação do
componente

-> para manipular os dados nos forms, estava usando o JS vanilla (getElementById)
mas tem uma forma melhor de fazer através do two way data binding, que é refletir
os dados que eu digito em outro lugar, usando o v-model

ROTAS

npm install --save-dev vue-router

Tem q instalar o router ainda e colocar algo nas outras 2 páginas